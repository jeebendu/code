CREATE OR ALTER PROCEDURE [GET_DOCTORS]
    @P_DOCTORNAME VARCHAR(128) = NULL,
    @P_DISPLAYNAME VARCHAR(128) = NULL,
    @P_MCRNUMBER VARCHAR(32) = NULL,
    @P_SPECIALITY VARCHAR(4000) = NULL,
    @P_SUBSPECIALITY VARCHAR(4000) = NULL,
    @P_TOSP VARCHAR(4000) = NULL,
    @P_CLINIC VARCHAR(4000) = NULL,
    @P_WATCHLISTED FLOAT = 0,
    @P_SUSPENDED FLOAT = 0,
    @P_TERMINATED FLOAT = 0,
    @P_ACTIVE_PANEL FLOAT = 0,
    @PageNo INT = 1,
    @PageSize INT = 10
AS
BEGIN
    SET NOCOUNT ON;

    -- Drop temporary tables if they exist
    IF OBJECT_ID('tempdb..#TBL_DOC_ANS_QUES') IS NOT NULL DROP TABLE #TBL_DOC_ANS_QUES;
    IF OBJECT_ID('tempdb..#TBL_DOC_ACTV') IS NOT NULL DROP TABLE #TBL_DOC_ACTV;

    -- Create temporary table for answered questions
    CREATE TABLE #TBL_DOC_ANS_QUES (
        DID BIGINT,
        VAL BIGINT
    );

    INSERT INTO #TBL_DOC_ANS_QUES (DID, VAL)
    SELECT 
        DOCI.ID,
        COUNT(APS.ID) AS ANSWEREDQUESTIONS
    FROM dbo.APPOINTMENTSURVEY APS
    INNER JOIN dbo.APPOINTMENTREQUEST AR ON AR.ID = APS.PARENTAPPOINTMENTREQUESTID
    INNER JOIN dbo.DOCTORCLINICMAP DCM ON DCM.ID = AR.CONFIRMEDDOCTORCLINICMAPID
    INNER JOIN dbo.DOCTORSPECIALITYMAP DSM ON DSM.ID = DCM.PARENTDOCTORSECIALITYMAPID
    INNER JOIN dbo.DOCTOR DOCI ON DOCI.ID = DSM.PARENTDOCTORID
    INNER JOIN dbo.SPECIALTY SPTI ON SPTI.ID = DSM.PARENTSPECIALTYID
    GROUP BY DOCI.ID;

    -- Create temporary table for doctor activity
    CREATE TABLE #TBL_DOC_ACTV (
        DID BIGINT,
        WATCHLIST INT,
        SUSPENDED INT,
        TERMINATION INT,
        ACTIVE_PANEL INT
    );

    INSERT INTO #TBL_DOC_ACTV (DID, WATCHLIST, SUSPENDED, TERMINATION, ACTIVE_PANEL)
    SELECT 
        D.ID,
        CASE WHEN WD.ID IS NULL THEN 0 ELSE 1 END AS WATCHLIST,
        CASE WHEN SD.ID IS NULL THEN 0 ELSE 1 END AS SUSPENDED,
        CASE WHEN D.TERMINATIONDATE < GETDATE() THEN 1 ELSE 0 END AS TERMINATION,
        CASE 
            WHEN GETDATE() BETWEEN D.EFFECTIVEDATE AND ISNULL(D.TERMINATIONDATE, '9999-12-31') THEN 1 
            ELSE 0 
        END AS ACTIVE_PANEL
    FROM dbo.DOCTOR D
    LEFT JOIN dbo.WATCHLISTDOCTOR WD ON WD.PARENTDOCTORID = D.ID AND GETDATE() BETWEEN WD.FROMDATE AND ISNULL(WD.TODATE, '9999-12-31')
    LEFT JOIN dbo.SUSPENDEDDOCTOR SD ON SD.PARENTDOCTORID = D.ID AND GETDATE() BETWEEN SD.FROMDATE AND ISNULL(SD.TODATE, '9999-12-31');

    -- Main query with filtering and pagination
    WITH RES AS (
        SELECT 
            ROW_NUMBER() OVER (ORDER BY LOWER(D.NAME)) AS ROW_NUM,
            D.ID,
            D.NAME,
            D.DISPLAYNAME,
            D.MCR,
            CONVERT(VARCHAR, D.EFFECTIVEDATE, 106) AS EFFECTIVEDATE,
            TOSP.TOSP AS TOSP,
            Specialities.Specialities AS SPECIALITIES,
            SubSpecialities.SubSpecialities AS SUBSPECIALITIES,
            Clinics.Clinics AS CLINICS,
            TD.WATCHLIST,
            TD.SUSPENDED,
            TD.TERMINATION,
            TD.ACTIVE_PANEL,
            ISNULL(TAQ.VAL, 0) AS ANSWEREDQUESTIONS,
            FLOOR(DOCOVERRAL.OVERALLRATINGWEIGHTAGE) AS OVERALLRATINGWEIGHTAGE,
            CASE WHEN PUBINRAT.TODATE IS NULL THEN 1 ELSE 0 END AS PUBLISHRATINGEXIST,
            (
                SELECT COUNT(*) 
                FROM dbo.PUBLISHDOCTORINTERNALRATING PDIR 
                WHERE PDIR.PARENTDOCTORID = D.ID
            ) AS ISPUBLISHED,
            (
                SELECT COUNT(*) 
                FROM dbo.DOCTORINTERNALRATING DIR 
                WHERE DIR.PARENTDOCTORID = D.ID AND DIR.YEAR = YEAR(SYSDATETIME())
            ) AS INTERNALRATINGEXIST
        FROM dbo.DOCTOR D
        LEFT JOIN #TBL_DOC_ACTV TD ON TD.DID = D.ID
        LEFT JOIN (
            SELECT 
                DT.PARENTDOCTORID, 
                STRING_AGG(ISFT.Name, ', ') WITHIN GROUP (ORDER BY ISFT.Name) AS TOSP
            FROM dbo.DOCTORTOSP DT
            INNER JOIN dbo.INPATIENTSURGEONFEETABLE ISFT ON ISFT.ID = DT.ParentInpatientSurgeonTableID
            GROUP BY DT.PARENTDOCTORID
        ) TOSP ON TOSP.PARENTDOCTORID = D.ID
        LEFT JOIN (
            SELECT 
                DSM.PARENTDOCTORID, 
                STRING_AGG(S.NAME, ', ') WITHIN GROUP (ORDER BY S.NAME) AS Specialities
            FROM dbo.DOCTORSPECIALITYMAP DSM
            INNER JOIN dbo.SPECIALTY S ON DSM.PARENTSPECIALTYID = S.ID
            GROUP BY DSM.PARENTDOCTORID
        ) Specialities ON Specialities.PARENTDOCTORID = D.ID
        LEFT JOIN (
            SELECT 
                DSM.PARENTDOCTORID, 
                STRING_AGG(SUS.NAME, ', ') WITHIN GROUP (ORDER BY SUS.NAME) AS SubSpecialities
            FROM dbo.DOCTORSPECIALITYMAP DSM
            LEFT JOIN dbo.DOCTORSUBSPECIALITYMAP DSSM ON DSSM.PARENTDOCTORSPECIALITYMAPID = DSM.ID
            LEFT JOIN dbo.SUBSPECIALTY SUS ON SUS.ID = DSSM.PARENTSUBSPECIALTYID
            GROUP BY DSM.PARENTDOCTORID
        ) SubSpecialities ON SubSpecialities.PARENTDOCTORID = D.ID
        LEFT JOIN (
            SELECT 
                CL.PARENTDOCTORID, 
                STRING_AGG(CL.NAME, ', ') WITHIN GROUP (ORDER BY CL.NAME) AS Clinics
            FROM dbo.CLINICSVIEW CL
            GROUP BY CL.PARENTDOCTORID
        ) Clinics ON Clinics.PARENTDOCTORID = D.ID
        LEFT JOIN #TBL_DOC_ANS_QUES TAQ ON TAQ.DID = D.ID
        LEFT JOIN dbo.VW_DOCOVERRALLRATING_MOBILEWEB DOCOVERRAL ON DOCOVERRAL.ID = D.ID
        LEFT JOIN dbo.PUBLISHDOCTORINTERNALRATING PUBINRAT ON PUBINRAT.PARENTDOCTORID = D.ID
        WHERE 
            (@P_DOCTORNAME IS NULL OR UPPER(D.NAME) LIKE '%' + UPPER(@P_DOCTORNAME) + '%') AND
            (@P_DISPLAYNAME IS NULL OR UPPER(D.DISPLAYNAME) LIKE '%' + UPPER(@P_DISPLAYNAME) + '%') AND
            (@P_MCRNUMBER IS NULL OR UPPER(D.MCR) LIKE '%' + UPPER(@P_MCRNUMBER) + '%') AND
            (@P_SPECIALITY IS NULL OR UPPER(Specialities.Specialities) LIKE '%' + UPPER(@P_SPECIALITY) + '%') AND
            (@P_SUBSPECIALITY IS NULL OR UPPER(SubSpecialities.SubSpecialities) LIKE '%' + UPPER(@P_SUBSPECIALITY) + '%') AND
            (@P_TOSP IS NULL OR UPPER(TOSP.TOSP) LIKE '%' + UPPER(@P_TOSP) + '%') AND
            (@P_CLINIC IS NULL OR UPPER(Clinics.Clinics) LIKE '%' + UPPER(@P_CLINIC) + '%') AND
            (TD.WATCHLIST = CASE WHEN @P_WATCHLISTED = 0 THEN TD.WATCHLIST ELSE @P_WATCHLISTED END) AND
            (TD.SUSPENDED = CASE WHEN @P_SUSPENDED = 0 THEN TD.SUSPENDED ELSE @P_SUSPENDED END) AND
            (TD.TERMINATION = CASE WHEN @P_TERMINATED = 0 THEN TD.TERMINATION ELSE @P_TERMINATED END) AND
            (TD.ACTIVE_PANEL = CASE WHEN @P_ACTIVE_PANEL = 0 THEN TD.ACTIVE_PANEL ELSE @P_ACTIVE_PANEL END)
    )
    SELECT 
        R.ROW_NUM,
        R.ID,
        R.NAME,
        R.DISPLAYNAME,
        R.MCR,
        R.EFFECTIVEDATE,
        R.TOSP,
        R.SPECIALITIES,
        R.SUBSPECIALITIES,
        R.CLINICS,
        R.WATCHLIST,
        R.SUSPENDED,
        R.TERMINATION,
        R.ACTIVE_PANEL,
        R.ANSWEREDQUESTIONS,
        R.OVERALLRATINGWEIGHTAGE,
        R.PUBLISHRATINGEXIST,
        R.ISPUBLISHED,
        R.INTERNALRATINGEXIST,
        (SELECT COUNT(*) FROM RES) AS TotalRows,
        (SELECT COUNT(*) FROM RES) AS FilterRows
    FROM RES AS R
    WHERE R.ROW_NUM > (@PageNo - 1) * @PageSize AND R.ROW_NUM <= @PageNo * @PageSize
    ORDER BY R.ROW_NUM;

    SET NOCOUNT OFF;
END;
